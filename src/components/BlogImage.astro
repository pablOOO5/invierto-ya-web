---
import { Image } from 'astro:assets';

interface Props {
  src: any;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
}

const { 
  src, 
  alt, 
  width = 400, 
  height = 240, 
  class: className = '', 
  loading = 'lazy' 
} = Astro.props;
---

<div class={`relative overflow-hidden bg-gradient-to-br from-gray-100 to-gray-200 ${className}`}>
  <Image
    src={src}
    alt={alt}
    width={width}
    height={height}
    format="webp"
    quality={85}
    loading={loading}
    class="w-full h-full object-cover"
  />
  
  <!-- Fallback content si la imagen no carga -->
  <div class="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 opacity-0 image-fallback">
    <div class="text-center">
      <div class="w-16 h-16 mx-auto mb-4 bg-blue-600 rounded-full flex items-center justify-center">
        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
      </div>
      <p class="text-sm text-gray-600 font-medium">Imagen del blog</p>
    </div>
  </div>
</div>

<style>
  .image-error .image-fallback {
    opacity: 1;
  }
  
  .image-error img {
    opacity: 0;
  }
</style>

<script>
  // Manejar errores de imagen desde el cliente
  document.addEventListener('DOMContentLoaded', function() {
    const imageContainers = document.querySelectorAll('div[class*="relative"][class*="overflow-hidden"]');
    
    imageContainers.forEach(container => {
      const img = container.querySelector('img');
      if (img) {
        img.addEventListener('error', function() {
          container.classList.add('image-error');
        });
        
        // También verificar si la imagen ya falló antes de que se agregara el listener
        if (img.complete && img.naturalWidth === 0) {
          container.classList.add('image-error');
        }
      }
    });
  });
</script>
